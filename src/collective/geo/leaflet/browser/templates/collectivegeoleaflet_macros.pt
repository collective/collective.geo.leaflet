<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="collective.geo.mapwidget"
      tal:omit-tag="">
  <head>
  </head>

  <body>

    <tal:comment replace="nothing">
      A macro to include all necessary javascript files
    </tal:comment>

   
    <metal:map-div define-macro="map-div"
                  tal:define="map_infos view/map_infos">
        <div id="map" 
             tal:attributes="data-latitude map_infos/latitude|nothing;
                data-longitude map_infos/longitude|nothing;
                data-zoom map_infos/zoom|nothing;
                data-marker_image map_infos/marker_image;
                style view/style|nothing">
        </div>

        <div class="hiddenStructure geo-popup-content">
            <tal:block tal:content="structure view/make_popup">
            </tal:block>
        </div>

    </metal:map-div>

    <metal:map-init-leaflet define-macro="map-init-leaflet">

        <script src="http://maps.google.com/maps/api/js?v=3.2&sensor=false"></script>
        <script src="http://matchingnotes.com/javascripts/leaflet-google.js"></script>


        <script type="text/javascript" src="++resource++collective.geo.leaflet/cgeoleaflet.js">
        </script>

        <tal:block tal:content="structure python:view.default_layers()['layers']">
        </tal:block>
        
        <div class="baselayers" 
            tal:attributes="data-baselayers python:view.default_layers()['baselayers']">
        </div>
        
        <script type="text/javascript" src="++resource++collective.geo.leaflet/cgeoleaflet_baselayers.js">
        </script>


        <script type="text/javascript">
        </script>
        
        <script type="text/javascript">
        //add mini map, should be on a separate js file
            //map.locate({setView: true});
            var osm2 = new L.TileLayer(osmUrl, {minZoom: 0, maxZoom: 13, attribution: osmAttrib});
            var miniMap = new L.Control.MiniMap(osm2).addTo(map);

        //add marker
            var markercoord = [latitude, longitude];

            //Extend the Default marker class
            var CustomIcon = L.Icon.Default.extend({
                options: {
                    iconUrl: marker_url
                }
            });

            var customIcon = new CustomIcon();

            var marker = L.marker(markercoord, {icon: customIcon}).addTo(map);

            var popup_content = $('div.geo-popup-content').html();
            marker.bindPopup(popup_content);
        </script>




    </metal:map-init-leaflet>

    <tal:comment replace="nothing">
      Macro to create html structure to geocoding feature.
      It needs mapid variable to work.
    </tal:comment>

    <metal:geocoding define-macro="map-search">
        <script type="text/javascript">
             new L.Control.GeoSearch({
                provider: new L.GeoSearch.Provider.OpenStreetMap(),
                position: 'topcenter',
                showMarker: true
            }).addTo(map);
        </script>
    </metal:geocoding>

    <div class="visualClear" ><!-- clear floats --></div>

  </body>

</html>
